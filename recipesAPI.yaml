openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/liatico/recipes/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: auth
    description: all authentication related routs
  - name: user
    description: user's personal info
  - name: recipes
    description: all recipes related info
paths:
  /login:
    post:
      tags:
        - auth
      description: a JASON object with user's info - username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username: 
                  type: string
                  minLength: 3
                  maxLength: 8
                  description: letters only
                password:
                  type: string
                  minLength: 5
                  maxLength: 10
                  description: letters with atleast one number and one special char
              example:
                username: "liat"
                password: "a12#45"
      responses:
        '200':
          description: user authenticated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRegistration"
        '401':
          description: Invalid number of fields
        '402':
          description: Invalid username or password

  /register:
    post:
      tags:
        - auth
      summary: Registration
      description: Registration to the system's services
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistration"
      responses:
        '200':
          description: Registration Succeed
        '401':
          description: Invalid number of arguments
        '402':
          description: Username or Email already exists
        '403':
          description: Passwords are not the same
  
          
  /recipes/search:
    post:
      tags:
        - recipes
      description: search in spoonacular API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                searchQuery: 
                  type: string
                  description: search query for API
                num:
                  type: integer
                  enum: [5, 10, 15]
                  default: 5
                  description: number of results to return
                cuisine:
                  $ref: '#/components/schemas/Cuisine'
                diet:
                  $ref: '#/components/schemas/Diet'
                intolerances:
                  $ref: '#/components/schemas/Intolerances' 
      responses:
        '200':
          description: retrived recipes successfully
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '401':
          description: Invalid arguments
          
  /recipes/randomRecipes:
    post:
      tags:
        - recipes
      summary: Get random recipes
      description: Get 3 random recipes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RecipePreview"
                minItems: 3
                maxItems: 3
                
  /recipes/myFamilyRecipes:
    post:
      tags:
        - recipes
      summary: Get user's family recipes
      description: Get user's family recipes preview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: integer

      responses:
        '200':
          description: User's family recipes under Family Recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '404':
          description: No recipes found under Family Recipes
        '405':
          description: Session expired, please login to continue
          
  /recipes/personalRecipes:
    post:
      tags:
        - recipes
      summary: Get user's personal recipes
      description: Get user's personal recipes preview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: integer
      responses:
        '200':
          description: User's personal recipes under personal Recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '404':
          description: No recipes found under personal Recipes
        '405':
          description: Session expired, please login to continue
   
          
  /user/favoriteRecipes:
    post:
      tags:
        - user
        - recipes
      summary: Returns user's favorite recipes
      description: Returns user's favorite recipes preview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: integer
      responses:
        '200':
          description: User's favorite recipes previews
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '404':
          description: No favorite recipes found
        '405':
          description: Session expired, please login to continue
          
  /user/lastWatchedRecipes:
    post:
      tags:
        - user
        - recipes
      summary: Get user's last watched recipes
      description: Get user's 3 last watched recipes preview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: integer
      responses:
        '200':
          description: User's 3 last watched recipes under Last Watched Recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
                minItems: 3
                maxItems: 3
        '404':
          description: No recently watched recipes found
        '405':
          description: Session expired, please login to continue  
          
  /user/addFavoriteRecipe:
    post:
      tags:
        - user
        - recipes
      summary: Adds a recipe to user's favorites
      description: Adds a recipe to user's favorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                recipeID:
                  type: integer
      responses:
        '200':
          description: Recipe add successfully
        '405':
          description: Session expired, please login to continue
 
  /user/isUsernameExists:
    post:
      tags:
        - user
      summary: returns true if username exists in database
      description: returns true if username exists in database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: integer
      responses:
        '200':
          description: returns true if username exists in DB - use for registartion
          content:
            application/json:
              schema:
                type: boolean

  /user/removeFavoriteRecipe:
    post:
      tags:
        - user
        - recipes
      summary: Removes a recipe from user's favorites
      description: Removes a recipe from user's favorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                recipeID:
                  type: integer
      responses:
        '200':
          description: Recipe removed successfully
        '405':
          description: Session expired, please login to continue

  /user/addViewedRecipe:
    post:
      tags:
        - user
        - recipes
      summary: Adds a recipe to user's viewed recipes
      description: Adds a recipe to user's viewed recipes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                recipeID:
                  type: integer
      responses:
        '200':
          description: Recipe was viewed
        '405':
          description: Session expired, please login to continue
            
components:
  schemas:
    Cuisine:
      type: string
      enum:
        - African
        - American
        - British
        - Cajun
        - Caribbean
        - Chinese
        - Eastern European
        - European
        - French
        - German
        - Greek
        - Indian
        - Irish
        - Italian
        - Japanese
        - Jewish
        - Korean
        - Latin American
        - Mediterranean
        - Mexican
        - Middle Eastern
        - Nordic
        - Southern
        - Spanish
        - Thai
        - Vietnamese
        
    Diet:
      type: string
      enum:
        - Gluten Free
        - Ketogenic
        - Vegetarian
        - Lacto-Vegetarian
        - Ovo-Vegetarian
        - Vegan
        - Pescetarian
        - Paleo
        - Primal
        - Whole30
        
    Intolerances:
      type: string
      enum:
        - Dairy
        - Egg
        - Gluten
        - Grain
        - Peanut
        - Seafood
        - Sesame
        - Shellfish
        - Soy
        - Sulfite
        - Tree Nut
        - Wheat
    
            
    RecipePreview:
      type: object
      properties:
        id: 
          type: integer
          description: recipe's uniqe id for further use and actions on recipes
          example: 541
        title:
          type: string
          example: "Vanille cake"
        picture:
          type: string
          example: "https://urlexample.com/picture.jpg"
        PreparationTime:
          type: integer
          example: 60
        Popularity:
          type: integer
          example: 63
        isVegan:
          type: boolean
          example: true
        isVegiterian:
          type: boolean
          example: true
        isGlutenFree:
          type: boolean
          example: false
    
          
    UserRegistration:
      type: object
      properties:
        userName:
          type: string
          example: "username"
        firstName:
          type: string
          example: "user"
        lastName:
          type: string
          example: "lastName"
        country:
          type: string
          example: "Israel"
        password:
          type: string
          example: "pass1234"
        passwordConfirmation:
          type: string
          example: "pass1234"
        email:
          type: string
          example: "email@gmail.com"
        profilePictureURL:
          type: string
          example: "https://urlexample.com/picture.jpg"    
